#BlueJ class context
comment0.target=BabyBirths
comment0.text=\r\n\ Write\ a\ description\ of\ BabyBirths\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=fr
comment1.target=void\ totalBirths(edu.duke.FileResource)
comment10.params=f
comment10.target=int\ getCurrentYear(java.io.File)
comment11.params=
comment11.target=void\ testYearOfHighestRank()
comment12.params=name\ gender
comment12.target=double\ getAverageRank(java.lang.String,\ java.lang.String)
comment13.params=
comment13.target=void\ testAverageRank()
comment14.params=parser\ year\ name\ gender
comment14.target=int\ getTotalBirthsRankedHigher(org.apache.commons.csv.CSVParser,\ int,\ java.lang.String,\ java.lang.String)
comment15.params=
comment15.target=void\ testTotalBirthsRankedHigher()
comment2.params=parser\ name\ gender
comment2.target=int\ getRank(org.apache.commons.csv.CSVParser,\ java.lang.String,\ java.lang.String)
comment3.params=
comment3.target=void\ testTotalBirth()
comment4.params=
comment4.target=void\ testGetRank()
comment5.params=parser\ rank\ gender
comment5.target=java.lang.String\ getName(org.apache.commons.csv.CSVParser,\ int,\ java.lang.String)
comment6.params=
comment6.target=void\ testGetName()
comment7.params=parser1\ parser2\ name\ year\ newYear\ gender
comment7.target=void\ whatIsNameInYear(org.apache.commons.csv.CSVParser,\ org.apache.commons.csv.CSVParser,\ java.lang.String,\ int,\ int,\ java.lang.String)
comment8.params=
comment8.target=void\ testWhatIsNameInYear()
comment9.params=name\ gender
comment9.target=int\ yearOfHighestRank(java.lang.String,\ java.lang.String)
numComments=16
